 
 gcc -g p5original.c
 gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) b main
Breakpoint 1 at 0x725: file p5original.c, line 2.
(gdb) r
Starting program: /home/runner/Test3Session1/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p5original.c:2
2   int main() {
(gdb) n
6     printf("Enter the number of elements (1 to 100): ");
(gdb) n
7     scanf("%d", &n);
(gdb) n
Enter the number of elements (1 to 100): 12
9     for (int i = 0; i < n; ++i) {
(gdb) n
10      printf("Enter number%d: ", i + 1);
(gdb) n
11      scanf("%lf", &arr[i]);
(gdb) n
Enter number1: 2
9     for (int i = 0; i < n; ++i) {
(gdb) n
10      printf("Enter number%d: ", i + 1);
(gdb) n
11      scanf("%lf", &arr[i]);
(gdb) n
Enter number2: 3
9     for (int i = 0; i < n; ++i) {
(gdb) n
10      printf("Enter number%d: ", i + 1);
(gdb) n
11      scanf("%lf", &arr[i]);
(gdb) n
Enter number3: 6
9     for (int i = 0; i < n; ++i) {
(gdb) n
10      printf("Enter number%d: ", i + 1);
(gdb) n
11      scanf("%lf", &arr[i]);
(gdb) n
Enter number4: 5
9     for (int i = 0; i < n; ++i) {
(gdb) n
10      printf("Enter number%d: ", i + 1);
(gdb) n
11      scanf("%lf", &arr[i]);
(gdb) n
Enter number5: 5
9     for (int i = 0; i < n; ++i) {
(gdb) n
10      printf("Enter number%d: ", i + 1);
(gdb) n
11      scanf("%lf", &arr[i]);
(gdb) n
Enter number6: 9
9     for (int i = 0; i < n; ++i) {
(gdb) n
10      printf("Enter number%d: ", i + 1);
(gdb) n
11      scanf("%lf", &arr[i]);
(gdb) n
Enter number7: 5
9     for (int i = 0; i < n; ++i) {
(gdb) n
10      printf("Enter number%d: ", i + 1);
(gdb) n
11      scanf("%lf", &arr[i]);
(gdb) n
Enter number8: 4
9     for (int i = 0; i < n; ++i) {
(gdb) n
10      printf("Enter number%d: ", i + 1);
(gdb) n
11      scanf("%lf", &arr[i]);
(gdb) n
Enter number9: 8
9     for (int i = 0; i < n; ++i) {
(gdb) n
10      printf("Enter number%d: ", i + 1);
(gdb) n
11      scanf("%lf", &arr[i]);
(gdb) n
Enter number10: 8
9     for (int i = 0; i < n; ++i) {
(gdb) n
10      printf("Enter number%d: ", i + 1);
(gdb) n
11      scanf("%lf", &arr[i]);
(gdb) n
Enter number11: 7
9     for (int i = 0; i < n; ++i) {
(gdb) n
10      printf("Enter number%d: ", i + 1);
(gdb) n
11      scanf("%lf", &arr[i]);
(gdb) n
Enter number12: 12
9     for (int i = 0; i < n; ++i) {
(gdb) n
13    for (int i = 1; i < n; ++i) {
(gdb) n
14      if (arr[0] < arr[i]) {
(gdb) n
15        arr[0] = arr[i];
(gdb) n
16        f=i;
(gdb) n
13    for (int i = 1; i < n; ++i) {
(gdb) n
14      if (arr[0] < arr[i]) {
(gdb) n
15        arr[0] = arr[i];
(gdb) n
16        f=i;
(gdb) n
13    for (int i = 1; i < n; ++i) {
(gdb) n
14      if (arr[0] < arr[i]) {
(gdb) n
13    for (int i = 1; i < n; ++i) {
(gdb) n
14      if (arr[0] < arr[i]) {
(gdb) n
13    for (int i = 1; i < n; ++i) {
(gdb) n
14      if (arr[0] < arr[i]) {
(gdb) n
15        arr[0] = arr[i];
(gdb) n
16        f=i;
(gdb) n
13    for (int i = 1; i < n; ++i) {
(gdb) n
14      if (arr[0] < arr[i]) {
(gdb) n
13    for (int i = 1; i < n; ++i) {
(gdb) n
14      if (arr[0] < arr[i]) {
(gdb) n
13    for (int i = 1; i < n; ++i) {
(gdb) n
14      if (arr[0] < arr[i]) {
(gdb) n
13    for (int i = 1; i < n; ++i) {
(gdb) n
14      if (arr[0] < arr[i]) {
(gdb) n
13    for (int i = 1; i < n; ++i) {
(gdb) n
14      if (arr[0] < arr[i]) {
(gdb) n
13    for (int i = 1; i < n; ++i) {
(gdb) n
14      if (arr[0] < arr[i]) {
(gdb) n
15        arr[0] = arr[i];
(gdb) n
16        f=i;
(gdb) n
13    for (int i = 1; i < n; ++i) {
(gdb) n
20    printf("Largest element = %.2lf", arr[0]);
(gdb) n
21    printf("The Index Is:%d",f);
(gdb) n
23    return 0;
(gdb) n
24  }(gdb)
